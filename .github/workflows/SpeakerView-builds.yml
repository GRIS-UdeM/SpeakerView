name: "SpeakerView builds"
on: push

env:
  GODOT_VERSION: 4.5
  EXPORT_NAME: SpeakerView
  PROJECT_PATH: .

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-24.04
    container:
      # there is no way to access the env namespace in image. don't even try to deduplicate this.
      image: barichello/godot-ci:4.5-stable
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows

  export-linux-arm:
    name: Linux ARM Export
    runs-on: ubuntu-24.04
    container:
      image: barichello/godot-ci:4.5-stable
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linuxarm
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "LinuxARM" "$EXPORT_DIR/linuxarm/$EXPORT_NAME.arm64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linuxARM
          path: build/linuxarm

  export-linux:
    name: Linux Export
    runs-on: ubuntu-24.04
    container:
      image: barichello/godot-ci:4.5-stable
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux

  export-mac:
    name: Mac Export
    runs-on: ubuntu-24.04
    container:
      image: barichello/godot-ci:4.5-stable
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Mac Build
        run: |
          mkdir -v -p build/mac
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "macOS" "$EXPORT_DIR/mac/$EXPORT_NAME.zip"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac
          path: build/mac

  sign-and-notarize-mac:
    needs: export-mac
    name: Sign and Notarize Mac
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: dl artifact
        uses: actions/download-artifact@v5
        with:
          name: mac
          path: artifact
      # It would be very nice to have this as part of the external composite actions but it looks like there are limitations around long inputs.
      - name: Setup certificate files
        env:
          GLL_APPLE_DEVELOPER_ID_APPLICATION: ${{ secrets.GLL_APPLE_DEVELOPER_ID_APPLICATION }}
          GLL_APPLE_DEVELOPER_ID_INSTALLER: ${{ secrets.GLL_APPLE_DEVELOPER_ID_INSTALLER }}
        run: |
          echo "$GLL_APPLE_DEVELOPER_ID_APPLICATION" | base64 --decode > spatgris-app-cert.p12
          export CODESIGN_APP_SECUREFILEPATH=$PWD/spatgris-app-cert.p12
          echo "app_cert_path=$CODESIGN_APP_SECUREFILEPATH" >> $GITHUB_ENV

          echo "$GLL_APPLE_DEVELOPER_ID_INSTALLER" | base64 --decode > spatgris-installer-cert.p12
          export CODESIGN_INSTALLER_SECUREFILEPATH=$PWD/spatgris-installer-cert.p12
          echo "installer_cert_path=$CODESIGN_INSTALLER_SECUREFILEPATH" >> $GITHUB_ENV

      - name: Setup codesigning
        uses: GRIS-UdeM/actions/setup-codesign@main
        with:
          apple-application-cert: ${{ env.app_cert_path }}
          apple-installer-cert: ${{ env.installer_cert_path }}
          apple-dev-password: ${{ secrets.GLL_APPLE_DEVELOPER_ID_PASSWORD }}
      - name: Unzip
        run: |
          (unzip -a artifact/$EXPORT_NAME.zip -d artifact/ && rm artifact/$EXPORT_NAME.zip)
      - name: Sign
        id: sign
        uses: GRIS-UdeM/actions/sign@main
        with:
          apple-dev-identity: "Gael Lane Lepine"
          path-to-sign: 'artifact/'
      - name: Notarize
        id: notarize
        uses: GRIS-UdeM/actions/notarize@main
        with:
          apple-dev-email: "glanelepine@gmail.com"
          apple-dev-team: "62PMMWH49Z"
          apple-app-password: ${{ secrets.GLL_APPLE_APP_PASSWORD }}
          app-path: "artifact/"
          app-name: ${{ env.EXPORT_NAME }}
          app-file-suffix: ".app"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac-signed-and-notarized
          path: ${{ steps.notarize.outputs.notarized-app-folder }}
